{
  "cells": [
    {
      "metadata": {
        "_uuid": "4ed382c1f6df06ba8cbb0d706723a62ce12f0b24"
      },
      "cell_type": "markdown",
      "source": "Pengando os dados novamente"
    },
    {
      "metadata": {
        "_uuid": "0404bb79b45da6669f15e2f84d51be156efd4462",
        "_execution_state": "idle",
        "trusted": true
      },
      "cell_type": "code",
      "source": "#bibliotecas necessárias\nlibrary(tidyverse) \nlibrary(reshape)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "196269589c60d6bde6dfd6e559daafe6d6a072fb"
      },
      "cell_type": "code",
      "source": "#importando os dados de treino já pré-processados\ndados <- read.csv('../input/r-flatten-json-columns-to-make-single-data-frame/train_flat.csv')",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "99ba150e88418aedc6271674fa1cd6add5e48bf8"
      },
      "cell_type": "markdown",
      "source": "Colocando os \"tipo\" nos dados"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "148017119dba8a851c96384f6925c033727b83cb"
      },
      "cell_type": "code",
      "source": "dados$transactionRevenue[!is.na(dados$transactionRevenue)]<- 1\ndados$transactionRevenue[is.na(dados$transactionRevenue)]<- 0",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "f926fd4a2cc7978b43bcfaa82edf60dec31880fe"
      },
      "cell_type": "markdown",
      "source": "Os relevantes a mais, relativos ao tempo, seriam o dia da semana e hora"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "2aa788e05b40ba6a413af405ea514f162d181ab9"
      },
      "cell_type": "code",
      "source": "dados$visitStartTime <- as.POSIXct(dados$visitStartTime, origin=\"1970-01-01\")\ndados$hora <- as.numeric(substr(dados$visitStartTime,12,13)   )\ndados$semana <-weekdays(dados$visitStartTime)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "1baff8c1dae13527f0e4b4bee7dcc6d56a27f430"
      },
      "cell_type": "markdown",
      "source": "Esse aqui é o df com as variaveis seleciononadas"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "9e119165bdf37a91d5e6752920691cc29b7719a5"
      },
      "cell_type": "code",
      "source": "df<- dados[c('transactionRevenue','source', 'pageviews', 'hits', 'country', 'isMobile', 'operatingSystem', 'hora', 'semana')]\nhead(df)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "20b2b757bcb7e616f891e00a583c8004680b3272"
      },
      "cell_type": "markdown",
      "source": "Agora, normalizando as variaveis e limpando alguns NAs"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "50a87c5ce412c158273c7cc1b1b98f384ddecb0c"
      },
      "cell_type": "code",
      "source": "summary(df)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "88e284216a4b0afd8a95c9eaea5bcdbf9ac07f30"
      },
      "cell_type": "markdown",
      "source": "tirando umas linhas com nas"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "f69ba32fe6c4060c947a445b329d17036109e054"
      },
      "cell_type": "code",
      "source": "df<- df[!is.na(df$pageviews),]",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "77eec564af39aa83cedecc2f5f99c61ec57474dd"
      },
      "cell_type": "code",
      "source": "norm<- function(x){return ((x - min(x)) / (max(x) - min(x))) }",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "2a28ce48769b3927440f59d28812f531f5659952"
      },
      "cell_type": "code",
      "source": "df$hits <- norm(df$hits)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "41622064145bb5331ba06bc646246f29f9d34825"
      },
      "cell_type": "code",
      "source": "df$pageviews <- norm(df$pageviews)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "88f4d65e1e12812886764792c7fd17e41df09b9f"
      },
      "cell_type": "code",
      "source": "df$hora <- norm(df$hora)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "8eca0ad21f3fc942f51ea2d200961f5fbac14c5e"
      },
      "cell_type": "markdown",
      "source": "Transformando as variáveis categóricas em numericas"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "edfda3d74ddd4632ca6cd926e7644f433fe18a2d"
      },
      "cell_type": "code",
      "source": "df$isMobile[df$isMobile == TRUE] = 1\ndf$isMobile[df$isMobile == FALSE] = 0",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "69bb39c715c0777a3a9bf35eb48b35b75bf10706"
      },
      "cell_type": "code",
      "source": "df$semana[df$semana == 'Sunday'] = 0\ndf$semana[df$semana == 'Saturday'] = 0.15\ndf$semana[df$semana == 'Monday'] = 0.3\ndf$semana[df$semana == 'Tuesday'] = 0.45\ndf$semana[df$semana == 'Wednesday'] = 0.60\ndf$semana[df$semana == 'Thursday'] = 0.85\ndf$semana[df$semana == 'Friday'] = 0.1",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "ba2bc22e2641470dfcdae68933bb70a03f42c912"
      },
      "cell_type": "code",
      "source": "relCountry <- data.frame( 'pais' = unique(df$country), 'num' = norm(as.numeric(unique(df$country))) )\ndf$country <- as.numeric(df$country)\ndf$country <- norm(df$country)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "ba45e19d6b874c9bda9bef8be3f8116868c756c4"
      },
      "cell_type": "code",
      "source": "relOS <- data.frame( 'pais' = unique(df$operatingSystem), 'num' = norm(as.numeric(unique(df$operatingSystem))) )\ndf$operatingSystem <- as.numeric(df$operatingSystem)\ndf$operatingSystem <- norm(df$operatingSystem)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "9bdfa895b092aa4efbd54861edd6be7c583afcaf"
      },
      "cell_type": "code",
      "source": "relSrc <- data.frame( 'pais' = unique(df$source), 'num' = norm(as.numeric(unique(df$source))) )\ndf$source <- as.numeric(df$source)\ndf$source <- norm(df$source)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "1a4c2eafab07725ab8c33328a98f9d1387ab4249"
      },
      "cell_type": "markdown",
      "source": "Criando as categorias de resultados"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "31335627904eb730ffff4c77ceccabcdaa6e32a8"
      },
      "cell_type": "code",
      "source": "df$transactionRevenue[df$transactionRevenue ==0] <- 'n'\ndf$transactionRevenue[df$transactionRevenue ==1] <- 's'\ndf$transactionRevenue<-as.factor(df$transactionRevenue)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "d6a82ad43367bde10f4200c826a253a1810bde67"
      },
      "cell_type": "markdown",
      "source": "Ficou assim:"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "6fc7456952698b3d8018cc3a3f3a43871cc8d514"
      },
      "cell_type": "code",
      "source": "head(df)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "342fe1e1e64857487c045b17cd6c593b634ab4cc"
      },
      "cell_type": "markdown",
      "source": "Separando em teste e treino"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "b3a77fe240bba648cf2d9e29ccee2c9b3979f25e"
      },
      "cell_type": "code",
      "source": "nmr=sample(1:nrow(df), as.integer(nrow(df)/3))",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "5d9669cd7dc8fdf8c28657dee56bac7b5f4abb26"
      },
      "cell_type": "code",
      "source": "test = df[-nmr,]\ntrain = df[nmr,]",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "6966c011f594b6c8d31c20a87f102439e0d94deb"
      },
      "cell_type": "markdown",
      "source": "Random trees"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "d13434bf0f9a3f1db26d52152690ad2773b5b7f8"
      },
      "cell_type": "code",
      "source": "library(randomForest)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "9d4a97834b21862acee39c4301e0d1aea0ee5bd4"
      },
      "cell_type": "code",
      "source": "rf1<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=150)\nprint(rf1)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "455377635b650b8c0c0394d9f0f7cf95987c1032"
      },
      "cell_type": "code",
      "source": "rf2<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=150)\nprint(rf2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "7491c6eb23be2db5e25f4db9a8d38e96e961aa4d"
      },
      "cell_type": "code",
      "source": "rf3<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=150)\nprint(rf3)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "7c1ab0febdf5ac16dc411074c40ea5f36de2fb8b"
      },
      "cell_type": "code",
      "source": "rfc1 <- combine(rf1, rf2, rf3)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "1e1e5deef37f02f7543a7e8d78ebc00afbdce914"
      },
      "cell_type": "code",
      "source": "rf4<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=175)\nprint(rf4)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "5803a968a3c0c05683681448df4d2fef7554888a"
      },
      "cell_type": "code",
      "source": "rf5<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=175)\nprint(rf5)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "3c56eac3a663d12435725d611d51c1137ff3e91a"
      },
      "cell_type": "code",
      "source": "rf6<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=175)\nprint(rf6)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "a50c658d92d5361dc5af2806c8c0754243949bae"
      },
      "cell_type": "code",
      "source": "rfc2 <- combine(rf4, rf5, rf6)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "a93c3995bff768678ccd2fa3aef170c909b7c7e6"
      },
      "cell_type": "code",
      "source": "rf7<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=200)\nprint(rf7)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "f366c9918934ff3e0bf592024d7e0f1905462a95"
      },
      "cell_type": "code",
      "source": "rf8<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=200)\nprint(rf8)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "6f5b42b6faedc75f4f61825a1d9e180c4dc32966"
      },
      "cell_type": "code",
      "source": "rf9<-randomForest(y=train$transactionRevenue,x=train[2:9], do.trace=10, ntree=200)\nprint(rf9)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "07dacd47e8980d788b1d92e828a1c7abc9e9b8a6"
      },
      "cell_type": "code",
      "source": "rfc3 <- combine(rf7, rf8, rf9)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "70cf223bd9df5349845946e5cf2a118d1eec27ce"
      },
      "cell_type": "code",
      "source": "print(rfc1)\nprint(rfc2)\nprint(rfc3)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "8037d91464507c32123ae3d1b8731dae10bbb886"
      },
      "cell_type": "code",
      "source": "pRf1<-predict(rfc1, test[2:9])\npRf2<-predict(rfc2, test[2:9])\npRf3<-predict(rfc3, test[2:9])",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "da262d4b5f10fcf8a286805d877ec0afbb30e3cd"
      },
      "cell_type": "markdown",
      "source": "% de acertos"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "793feb5d6a734e0983c1d8a5690b97603a0e5b71"
      },
      "cell_type": "code",
      "source": "temp=pRf1\nmatrix( ncol=3, byrow = TRUE,\n    c('1', 'positivo', 'negativo',\n    'verdadeiro(%):',sum(temp[test$transactionRevenue == 's'] == 's')/sum(temp == 's'), sum(temp[test$transactionRevenue == 'n'] == 'n')/sum(temp == 'n'),\n    'falso(%):', sum(temp[test$transactionRevenue == 'n'] == 's')/sum(temp == 's'),  sum(temp[test$transactionRevenue == 's'] == 'n')/sum(temp == 'n'),\n    'acertos(%):',sum(temp[test$transactionRevenue == 's'] == 's')/sum(test$transactionRevenue == 's'),sum(temp[test$transactionRevenue == 'n'] == 'n')/sum(test$transactionRevenue =='n'),\n    'resultados:', sum(temp == 's'), sum(temp == 'n'),\n    'total:', sum(test$transactionRevenue == 's'), sum(test$transactionRevenue =='n')\n     )\n)\n\ntemp=pRf2\nmatrix( ncol=3, byrow = TRUE,\n    c('2', 'positivo', 'negativo',\n    'verdadeiro(%):',sum(temp[test$transactionRevenue == 's'] == 's')/sum(temp == 's'), sum(temp[test$transactionRevenue == 'n'] == 'n')/sum(temp == 'n'),\n    'falso(%):', sum(temp[test$transactionRevenue == 'n'] == 's')/sum(temp == 's'),  sum(temp[test$transactionRevenue == 's'] == 'n')/sum(temp == 'n'),\n    'acertos(%):',sum(temp[test$transactionRevenue == 's'] == 's')/sum(test$transactionRevenue == 's'),sum(temp[test$transactionRevenue == 'n'] == 'n')/sum(test$transactionRevenue =='n'),\n    'resultados:', sum(temp == 's'), sum(temp == 'n'),\n    'total:', sum(test$transactionRevenue == 's'), sum(test$transactionRevenue =='n')\n     )\n)\n\ntemp=pRf3\nmatrix( ncol=3, byrow = TRUE,\n    c('3', 'positivo', 'negativo',\n    'verdadeiro(%):',sum(temp[test$transactionRevenue == 's'] == 's')/sum(temp == 's'), sum(temp[test$transactionRevenue == 'n'] == 'n')/sum(temp == 'n'),\n    'falso(%):', sum(temp[test$transactionRevenue == 'n'] == 's')/sum(temp == 's'),  sum(temp[test$transactionRevenue == 's'] == 'n')/sum(temp == 'n'),\n    'acertos(%):',sum(temp[test$transactionRevenue == 's'] == 's')/sum(test$transactionRevenue == 's'),sum(temp[test$transactionRevenue == 'n'] == 'n')/sum(test$transactionRevenue =='n'),\n    'resultados:', sum(temp == 's'), sum(temp == 'n'),\n    'total:', sum(test$transactionRevenue == 's'), sum(test$transactionRevenue =='n')\n     )\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "86763ada4af63347c5c60d029182451c577c8ace"
      },
      "cell_type": "markdown",
      "source": "Salvando o modelo"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "fd34b78c94f13c564fbe93ff63e06cca31f2584d"
      },
      "cell_type": "code",
      "source": "save(rfc1,file = \"rf1.RData\")\nsave(rfc2,file = \"rf2.RData\")\nsave(rfc3,file = \"rf3.RData\")",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "R",
      "language": "R",
      "name": "ir"
    },
    "language_info": {
      "mimetype": "text/x-r-source",
      "name": "R",
      "pygments_lexer": "r",
      "version": "3.4.2",
      "file_extension": ".r",
      "codemirror_mode": "r"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 1
}