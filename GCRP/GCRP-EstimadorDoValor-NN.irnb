{
  "cells": [
    {
      "metadata": {
        "_uuid": "4ed382c1f6df06ba8cbb0d706723a62ce12f0b24"
      },
      "cell_type": "markdown",
      "source": "Pengando os dados novamente"
    },
    {
      "metadata": {
        "_uuid": "0404bb79b45da6669f15e2f84d51be156efd4462",
        "_execution_state": "idle",
        "trusted": true
      },
      "cell_type": "code",
      "source": "#bibliotecas necessárias\nlibrary(tidyverse) \nlibrary(reshape)\nlibrary(keras)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "196269589c60d6bde6dfd6e559daafe6d6a072fb"
      },
      "cell_type": "code",
      "source": "#importando os dados de treino já pré-processados\ndados <- read.csv('../input/r-flatten-json-columns-to-make-single-data-frame/train_flat.csv')",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "f2bc08322a34e208eb5c8fd94dca8f57fe294678"
      },
      "cell_type": "markdown",
      "source": "Pegando so os com valores de venda\n"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "f260958000f3d72db4203db2ffa88023dcd35891"
      },
      "cell_type": "code",
      "source": "dados<-dados[!is.na(dados$transactionRevenue),]",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "99ba150e88418aedc6271674fa1cd6add5e48bf8"
      },
      "cell_type": "markdown",
      "source": "Colocando os \"tipo\" nos dados"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "2aa788e05b40ba6a413af405ea514f162d181ab9"
      },
      "cell_type": "code",
      "source": "dados$visitStartTime <- as.POSIXct(dados$visitStartTime, origin=\"1970-01-01\")\ndados$hora <- as.numeric(substr(dados$visitStartTime,12,13)   )\ndados$semana <-weekdays(dados$visitStartTime)\ndados$mes<-months(dados$visitStartTime)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "1baff8c1dae13527f0e4b4bee7dcc6d56a27f430"
      },
      "cell_type": "markdown",
      "source": "Esse aqui é o df com as variaveis seleciononadas"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "9e119165bdf37a91d5e6752920691cc29b7719a5"
      },
      "cell_type": "code",
      "source": "df<- dados[c('transactionRevenue','browser','country', 'campaign','hora','semana', 'mes','operatingSystem','networkDomain', 'visitNumber',\n    'medium','source','isMobile')]\nhead(df)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "a35b0b3b1a2642492cdda8f9a458356e86490f05"
      },
      "cell_type": "markdown",
      "source": "Normalizações de dados"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "77eec564af39aa83cedecc2f5f99c61ec57474dd"
      },
      "cell_type": "code",
      "source": "norm<- function(x){return ((x - min(x)) / (max(x) - min(x))) }",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "2a28ce48769b3927440f59d28812f531f5659952"
      },
      "cell_type": "code",
      "source": "df$transactionRevenue <- norm(df$transactionRevenue)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "41622064145bb5331ba06bc646246f29f9d34825"
      },
      "cell_type": "code",
      "source": "df$hora <- norm(df$hora)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "88f4d65e1e12812886764792c7fd17e41df09b9f"
      },
      "cell_type": "code",
      "source": "df$visitNumber <- norm(df$visitNumber)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "8eca0ad21f3fc942f51ea2d200961f5fbac14c5e"
      },
      "cell_type": "markdown",
      "source": "Transformando as variáveis categóricas em numericas"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "edfda3d74ddd4632ca6cd926e7644f433fe18a2d"
      },
      "cell_type": "code",
      "source": "df$isMobile[df$isMobile == TRUE] = 1\ndf$isMobile[df$isMobile == FALSE] = 0",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "b6cb96d285957cd6a505ae4f8cd6d195478f0dd3"
      },
      "cell_type": "code",
      "source": "relBrowser <- data.frame( 'browser' = unique(df$browser), 'num' = norm(as.numeric(unique(df$browser))) )\ndf$browser <- as.numeric(df$browser)\ndf$browser <- norm(df$browser)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "bad9cfda9c41ece7e1c9c8410134be4d94c1b74e"
      },
      "cell_type": "code",
      "source": "relNetworkDomain <- data.frame( 'networkDomain' = unique(df$networkDomain), 'num' = norm(as.numeric(unique(df$networkDomain))) )\ndf$networkDomain <- as.numeric(df$networkDomain)\ndf$networkDomain <- norm(df$networkDomain)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "79ef094b5627caa1b5efdb8aa52b913cacea0d08"
      },
      "cell_type": "code",
      "source": "relMedium <- data.frame( 'operatingSystem' = unique(df$medium), 'num' = norm(as.numeric(unique(df$medium))) )\ndf$medium <- as.numeric(df$medium)\ndf$medium <- norm(df$medium)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "ba2bc22e2641470dfcdae68933bb70a03f42c912"
      },
      "cell_type": "code",
      "source": "relOs <- data.frame( 'operatingSystem' = unique(df$operatingSystem), 'num' = norm(as.numeric(unique(df$operatingSystem))) )\ndf$operatingSystem <- as.numeric(df$operatingSystem)\ndf$operatingSystem <- norm(df$operatingSystem)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "fbe15fcc5f9294cdfcce48a4769161a2273f7556"
      },
      "cell_type": "code",
      "source": "relCountry <- data.frame( 'pais' = unique(df$country), 'num' = norm(as.numeric(unique(df$country))) )\ndf$country <- as.numeric(df$country)\ndf$country <- norm(df$country)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "afc3121496e2cb55117052118e6cac2dc0e2c7dd"
      },
      "cell_type": "code",
      "source": "relMes <- data.frame( 'mes' = unique(df$mes), 'num' = norm(as.numeric(unique(as.factor(df$mes)))) )\ndf$mes <- as.numeric(as.factor(df$mes))\ndf$mes <- norm(df$mes)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "57cd403f8b4ab014b09deb78a2add52a9c27d83d"
      },
      "cell_type": "code",
      "source": "relCampaign <- data.frame( 'campaign' = unique(df$campaign), 'num' = norm(as.numeric(unique(df$campaign))) )\ndf$campaign <- as.numeric(df$campaign)\ndf$campaign <- norm(df$campaign)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "b4e2e9c2c705257d7f69fd11f2d52d31ef4aa14b"
      },
      "cell_type": "code",
      "source": "relSemana <- data.frame( 'semana' = unique(df$semana), 'num' = norm(as.numeric(unique(as.factor(df$semana)))) )\ndf$semana <- as.numeric(as.factor(df$semana))\ndf$semana <- norm(df$semana)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "ba45e19d6b874c9bda9bef8be3f8116868c756c4"
      },
      "cell_type": "code",
      "source": "relOS <- data.frame( 'pais' = unique(df$operatingSystem), 'num' = norm(as.numeric(unique(df$operatingSystem))) )\ndf$operatingSystem <- as.numeric(df$operatingSystem)\ndf$operatingSystem <- norm(df$operatingSystem)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "9bdfa895b092aa4efbd54861edd6be7c583afcaf"
      },
      "cell_type": "code",
      "source": "relSrc <- data.frame( 'src' = unique(df$source), 'num' = norm(as.numeric(unique(df$source))) )\ndf$source <- as.numeric(df$source)\ndf$source <- norm(df$source)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "b9bdde871fab729bb161a18991f5ccb295caa5d0"
      },
      "cell_type": "code",
      "source": "summary(df)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "342fe1e1e64857487c045b17cd6c593b634ab4cc"
      },
      "cell_type": "markdown",
      "source": "Separando em teste e treino"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "b3a77fe240bba648cf2d9e29ccee2c9b3979f25e"
      },
      "cell_type": "code",
      "source": "nmr=sample(1:nrow(df), as.integer(nrow(df)/7))",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "5d9669cd7dc8fdf8c28657dee56bac7b5f4abb26"
      },
      "cell_type": "code",
      "source": "test = df[nmr,]\ntrain = df[-nmr,]",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "6966c011f594b6c8d31c20a87f102439e0d94deb"
      },
      "cell_type": "markdown",
      "source": "RNA"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "fb062107fdbc8ae22be7f4a5be2b1935428ad3ad"
      },
      "cell_type": "code",
      "source": "model1 <- keras_model_sequential() \nmodel1 %>% \n layer_dense(units = 12, activation = 'softplus', input_shape = c(12) ) %>% \n    layer_dropout(rate = 0.2) %>%\n  layer_dense(units = 6, activation = 'softmax') %>%\n  layer_dense(units = 1)\n\ncb1 <-c(\n    callback_model_checkpoint('rna_cp1.R', monitor = \"val_loss\", verbose = 0, save_best_only = TRUE, save_weights_only = FALSE, mode = 'min')\n)\n\n               #             EarlyStopping(monitor='val_loss',\n               #               min_delta=0,\n               #               patience=0,\n               #               verbose=0, mode='auto') ",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "a38c621f70a564be6a44c30d81ef52dcb7a4d9db"
      },
      "cell_type": "code",
      "source": "model2 <- keras_model_sequential() \nmodel2 %>% \nlayer_dense(units = 12, activation = 'relu', input_shape = c(12) ) %>% \n  layer_dropout(rate = 0.2) %>%\n  layer_dense(units = 6, activation = 'softmax') %>%\n  layer_dense(units = 1)\n\n\ncb2 <-c(\n    callback_model_checkpoint('rna_cp2.R', monitor = \"val_loss\", verbose = 0, save_best_only = TRUE, save_weights_only = FALSE, mode = 'min')\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "b12e99145b5f080069472cc4e5b59ebb11c37956"
      },
      "cell_type": "code",
      "source": "model3 <- keras_model_sequential() \nmodel3 %>% \n  layer_dense(units = 12, activation = 'relu', input_shape = c(12) ) %>% \n  layer_dropout(rate = 0.2) %>%\n  layer_dense(units = 6, activation = 'softmax') %>%\n  layer_dense(units = 1)\n\ncb3 <-c(\n    callback_model_checkpoint('rna_cp3.R', monitor = \"val_loss\", verbose = 0, save_best_only = TRUE, save_weights_only = FALSE, mode = 'min'),\n    callback_early_stopping(patience=2)\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "e613bb00aaf14b41fde399b39abce8e58e5de2db"
      },
      "cell_type": "code",
      "source": "model4 <- keras_model_sequential() \nmodel4 %>% \n  layer_dense(units = 12, activation = 'relu', input_shape = c(12) ) %>% \n  layer_dropout(rate = 0.2) %>%\n  layer_dense(units = 6, activation = 'softplus') %>%\n  layer_dense(units = 1)\n\ncb4 <- c(\n    callback_model_checkpoint('rna_cp4.R', monitor = \"val_loss\", verbose = 0, save_best_only = TRUE, save_weights_only = FALSE, mode = 'min'),\n    callback_early_stopping(patience=2)\n)\n",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "d4b280831550c5f957420057280bf0c171d99e91"
      },
      "cell_type": "code",
      "source": "model1 %>% compile(\n  loss = 'mean_squared_error',\n  optimizer = 'sgd',\n  metrics = 'mean_absolute_error'\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "1e024e2f870c961e38d96846609237eec9abe354"
      },
      "cell_type": "code",
      "source": "model2 %>% compile(\n  loss = 'mean_squared_error',\n  optimizer = 'sgd',\n  metrics = 'mean_absolute_error'\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "77b2bf92a63d99e5d07a570789f28514b409161e"
      },
      "cell_type": "code",
      "source": "model3 %>% compile(\n  loss = 'mean_squared_error',\n  optimizer = 'sgd',\n  metrics = 'mean_absolute_error'\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "e2a4b7dbbce2ac8d67216c661ecbf813287fa997"
      },
      "cell_type": "code",
      "source": "model4 %>% compile(\n  loss = 'mean_squared_error',\n  optimizer = 'sgd',\n  metrics = 'mean_absolute_error'\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "db04646fe9ff11c1bcc62e8f42a8b95dce2524d7"
      },
      "cell_type": "code",
      "source": "history1<- fit( model1, \n  x=as.matrix(train[2:13]), y=as.matrix(train$transactionRevenue), \n  epochs = 200, verbose =1, validation_data= list(as.matrix(test[2:13]),as.matrix(test$transactionRevenue) ) ,\n  callbacks  = cb1\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "df6d8ced7da1e99f2302756fe33615d5e061aacc"
      },
      "cell_type": "code",
      "source": "history2<- fit( model2, \n  x=as.matrix(train[2:13]), y=as.matrix(train$transactionRevenue), \n  epochs = 200, verbose =1,validation_data= list(as.matrix(test[2:13]),as.matrix(test$transactionRevenue) ) ,\n  callbacks  = cb2\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "174f053ad42824fa668a72fe5ede743188037f49"
      },
      "cell_type": "code",
      "source": "history3<- fit( model3, \n  x=as.matrix(train[2:13]), y=as.matrix(train$transactionRevenue), \n  epochs = 200, verbose =1, validation_data= list(as.matrix(test[2:13]),as.matrix(test$transactionRevenue) ) ,\n  callbacks  = cb3\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "7d508a0ce75b669a86d627cb06b97eb74eb12376"
      },
      "cell_type": "code",
      "source": "history4<- fit( model4, \n  x=as.matrix(train[2:13]), y=as.matrix(train$transactionRevenue), \n  epochs = 200, verbose =1, validation_data= list(as.matrix(test[2:13]),as.matrix(test$transactionRevenue) ) ,\n  callbacks  = cb4\n)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "bb0889d3ef069da13419c13e225c7242cb9db5ca"
      },
      "cell_type": "code",
      "source": "print(history1)\nprint('-2-')\nprint(history2)\nprint('-3-')\nprint(history3)\nprint('-4-')\nprint(history4)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "584fc311e6170cbf3571f050d9466c98fa95bc0d"
      },
      "cell_type": "code",
      "source": "plot(history1)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "f1fa5429dbe3917687baa5fee0fe9e0750b1f15c"
      },
      "cell_type": "code",
      "source": "plot(history2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "99269aaafc59be68074ca8599404389cf8da4a0f"
      },
      "cell_type": "code",
      "source": "plot(history3)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "47d95950640ce9b826fe67247c69ea8a09143d0b"
      },
      "cell_type": "code",
      "source": "plot(history4)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "abbd47eb1c85855bfa4df53b20e8cbece967368d"
      },
      "cell_type": "code",
      "source": "t1<-model1 %>% predict(as.matrix(test[2:13]))\nt2<-model2 %>% predict(as.matrix(test[2:13]))\nt3<-model3 %>% predict(as.matrix(test[2:13]))\nt4<-model4 %>% predict(as.matrix(test[2:13]))",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "97cce0daac7f5d5575caed43f12a0cab7b40b2e2"
      },
      "cell_type": "code",
      "source": "matrix(c(t1,test$transactionRevenue), ncol=2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "fe19790c6ab608d86cd565bc7bdf419840f80de7"
      },
      "cell_type": "code",
      "source": "matrix(c(t2,test$transactionRevenue), ncol=2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "830cd62fcd37630e7938e6070fb6426fad8618da"
      },
      "cell_type": "code",
      "source": "matrix(c(t3,test$transactionRevenue), ncol=2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "8b76e18543d1a4e62ffaf96fde417651bd8730d4"
      },
      "cell_type": "code",
      "source": "matrix(c(t4,test$transactionRevenue), ncol=2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "_uuid": "17ddb52792380f70db032ff821fe1e59f003c30c"
      },
      "cell_type": "markdown",
      "source": "Salvando o modelo"
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "f13e624ff94168ffb4efdb5f8a45c88e3c4bc9cf"
      },
      "cell_type": "code",
      "source": "#temp<-load_model_hdf5('../input/estimador-do-valor-rna/rna.R')\nload_model_weights_hdf5(model1, '../input/estimador-do-valor-nn/rna_cp1.R')\nload_model_weights_hdf5(model2, '../input/estimador-do-valor-nn/rna_cp2.R')\nload_model_weights_hdf5(model3, '../input/estimador-do-valor-nn/rna_cp3.R')\nload_model_weights_hdf5(model4, '../input/estimador-do-valor-nn/rna_cp4.R')",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "e83c8d8fa8dbb2ee3a80f5d6564031b0af417b88"
      },
      "cell_type": "code",
      "source": "model1 %>% evaluate(as.matrix(test[2:13]), as.matrix(test$transactionRevenue))\nmodel2 %>% evaluate(as.matrix(test[2:13]), as.matrix(test$transactionRevenue))\nmodel3 %>% evaluate(as.matrix(test[2:13]), as.matrix(test$transactionRevenue))\nmodel4 %>% evaluate(as.matrix(test[2:13]), as.matrix(test$transactionRevenue))",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "0bd6947cd0cd9c4b79ef58d08aa0393bf807a305"
      },
      "cell_type": "code",
      "source": "t1<-model1 %>% predict(as.matrix(test[2:13]))\nt2<-model2 %>% predict(as.matrix(test[2:13]))\nt3<-model3 %>% predict(as.matrix(test[2:13]))\nt4<-model4 %>% predict(as.matrix(test[2:13]))",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "bbba53ef3b526cbe439faf210ea25e211307aba8"
      },
      "cell_type": "code",
      "source": "matrix(c(t1,test$transactionRevenue), ncol=2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "1331b106ee743238aaaff51c22008b036e0a0011"
      },
      "cell_type": "code",
      "source": "matrix(c(t2,test$transactionRevenue), ncol=2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "8e7de58562da0cc07aa2dff98fc5405ef18c1d35"
      },
      "cell_type": "code",
      "source": "matrix(c(t3,test$transactionRevenue), ncol=2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "752720a29980615e8997b9d85eb123e6ccec2f2b"
      },
      "cell_type": "code",
      "source": "matrix(c(t4,test$transactionRevenue), ncol=2)",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {
        "trusted": true,
        "_uuid": "020202d9963961bc2a5dfd285333705f4b980a41"
      },
      "cell_type": "code",
      "source": "save_model_hdf5(model1, 'rnaEs1.R')\nsave_model_hdf5(model2, 'rnaEs2.R')\nsave_model_hdf5(model3, 'rnaEs3.R')\nsave_model_hdf5(model4, 'rnaEs4.R')\nsave_model_weights_hdf5(model1, 'rnaEs1_w.R')\nsave_model_weights_hdf5(model2, 'rnaEs2_w.R')\nsave_model_weights_hdf5(model3, 'rnaEs3_w.R')\nsave_model_weights_hdf5(model4, 'rnaEs4_w.R')",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "R",
      "language": "R",
      "name": "ir"
    },
    "language_info": {
      "mimetype": "text/x-r-source",
      "name": "R",
      "pygments_lexer": "r",
      "version": "3.4.2",
      "file_extension": ".r",
      "codemirror_mode": "r"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 1
}